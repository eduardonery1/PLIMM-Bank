# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.card import Card  # noqa: F401,E501
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class CardBlockResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, result_data: AllOfCardBlockResultResultData=None, blocked_card: Card=None):  # noqa: E501
        """CardBlockResult - a model defined in Swagger

        :param result_data: The result_data of this CardBlockResult.  # noqa: E501
        :type result_data: AllOfCardBlockResultResultData
        :param blocked_card: The blocked_card of this CardBlockResult.  # noqa: E501
        :type blocked_card: Card
        """
        self.swagger_types = {
            'result_data': AllOfCardBlockResultResultData,
            'blocked_card': Card
        }

        self.attribute_map = {
            'result_data': 'resultData',
            'blocked_card': 'blocked_card'
        }
        self._result_data = result_data
        self._blocked_card = blocked_card

    @classmethod
    def from_dict(cls, dikt) -> 'CardBlockResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CardBlockResult of this CardBlockResult.  # noqa: E501
        :rtype: CardBlockResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result_data(self) -> AllOfCardBlockResultResultData:
        """Gets the result_data of this CardBlockResult.


        :return: The result_data of this CardBlockResult.
        :rtype: AllOfCardBlockResultResultData
        """
        return self._result_data

    @result_data.setter
    def result_data(self, result_data: AllOfCardBlockResultResultData):
        """Sets the result_data of this CardBlockResult.


        :param result_data: The result_data of this CardBlockResult.
        :type result_data: AllOfCardBlockResultResultData
        """
        if result_data is None:
            raise ValueError("Invalid value for `result_data`, must not be `None`")  # noqa: E501

        self._result_data = result_data

    @property
    def blocked_card(self) -> Card:
        """Gets the blocked_card of this CardBlockResult.


        :return: The blocked_card of this CardBlockResult.
        :rtype: Card
        """
        return self._blocked_card

    @blocked_card.setter
    def blocked_card(self, blocked_card: Card):
        """Sets the blocked_card of this CardBlockResult.


        :param blocked_card: The blocked_card of this CardBlockResult.
        :type blocked_card: Card
        """
        if blocked_card is None:
            raise ValueError("Invalid value for `blocked_card`, must not be `None`")  # noqa: E501

        self._blocked_card = blocked_card
