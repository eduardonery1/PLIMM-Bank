# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AdvancePaymentRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, transaction_id: str=None, installments_to_advance: int=None):  # noqa: E501
        """AdvancePaymentRequest - a model defined in Swagger

        :param transaction_id: The transaction_id of this AdvancePaymentRequest.  # noqa: E501
        :type transaction_id: str
        :param installments_to_advance: The installments_to_advance of this AdvancePaymentRequest.  # noqa: E501
        :type installments_to_advance: int
        """
        self.swagger_types = {
            'transaction_id': str,
            'installments_to_advance': int
        }

        self.attribute_map = {
            'transaction_id': 'transactionId',
            'installments_to_advance': 'installmentsToAdvance'
        }
        self._transaction_id = transaction_id
        self._installments_to_advance = installments_to_advance

    @classmethod
    def from_dict(cls, dikt) -> 'AdvancePaymentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AdvancePaymentRequest of this AdvancePaymentRequest.  # noqa: E501
        :rtype: AdvancePaymentRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transaction_id(self) -> str:
        """Gets the transaction_id of this AdvancePaymentRequest.

        Identificador único da transação cujas parcelas devem ser liquidadas antecipadamente.  # noqa: E501

        :return: The transaction_id of this AdvancePaymentRequest.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id: str):
        """Sets the transaction_id of this AdvancePaymentRequest.

        Identificador único da transação cujas parcelas devem ser liquidadas antecipadamente.  # noqa: E501

        :param transaction_id: The transaction_id of this AdvancePaymentRequest.
        :type transaction_id: str
        """
        if transaction_id is None:
            raise ValueError("Invalid value for `transaction_id`, must not be `None`")  # noqa: E501

        self._transaction_id = transaction_id

    @property
    def installments_to_advance(self) -> int:
        """Gets the installments_to_advance of this AdvancePaymentRequest.

        Número de parcelas que devem ser adiantadas  # noqa: E501

        :return: The installments_to_advance of this AdvancePaymentRequest.
        :rtype: int
        """
        return self._installments_to_advance

    @installments_to_advance.setter
    def installments_to_advance(self, installments_to_advance: int):
        """Sets the installments_to_advance of this AdvancePaymentRequest.

        Número de parcelas que devem ser adiantadas  # noqa: E501

        :param installments_to_advance: The installments_to_advance of this AdvancePaymentRequest.
        :type installments_to_advance: int
        """
        if installments_to_advance is None:
            raise ValueError("Invalid value for `installments_to_advance`, must not be `None`")  # noqa: E501

        self._installments_to_advance = installments_to_advance
