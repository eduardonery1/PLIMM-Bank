# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CompanyInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, identity_document_number: str=None, name: str=None, department_code: str=None, contact_person: str=None):  # noqa: E501
        """CompanyInfo - a model defined in Swagger

        :param identity_document_number: The identity_document_number of this CompanyInfo.  # noqa: E501
        :type identity_document_number: str
        :param name: The name of this CompanyInfo.  # noqa: E501
        :type name: str
        :param department_code: The department_code of this CompanyInfo.  # noqa: E501
        :type department_code: str
        :param contact_person: The contact_person of this CompanyInfo.  # noqa: E501
        :type contact_person: str
        """
        self.swagger_types = {
            'identity_document_number': str,
            'name': str,
            'department_code': str,
            'contact_person': str
        }

        self.attribute_map = {
            'identity_document_number': 'identityDocumentNumber',
            'name': 'name',
            'department_code': 'departmentCode',
            'contact_person': 'contactPerson'
        }
        self._identity_document_number = identity_document_number
        self._name = name
        self._department_code = department_code
        self._contact_person = contact_person

    @classmethod
    def from_dict(cls, dikt) -> 'CompanyInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CompanyInfo of this CompanyInfo.  # noqa: E501
        :rtype: CompanyInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity_document_number(self) -> str:
        """Gets the identity_document_number of this CompanyInfo.

        No Brasil, usar CNPJ do companhia.  # noqa: E501

        :return: The identity_document_number of this CompanyInfo.
        :rtype: str
        """
        return self._identity_document_number

    @identity_document_number.setter
    def identity_document_number(self, identity_document_number: str):
        """Sets the identity_document_number of this CompanyInfo.

        No Brasil, usar CNPJ do companhia.  # noqa: E501

        :param identity_document_number: The identity_document_number of this CompanyInfo.
        :type identity_document_number: str
        """

        self._identity_document_number = identity_document_number

    @property
    def name(self) -> str:
        """Gets the name of this CompanyInfo.

        Raz찾o social da companhia.  # noqa: E501

        :return: The name of this CompanyInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CompanyInfo.

        Raz찾o social da companhia.  # noqa: E501

        :param name: The name of this CompanyInfo.
        :type name: str
        """

        self._name = name

    @property
    def department_code(self) -> str:
        """Gets the department_code of this CompanyInfo.

        Nome ou c처digo do departamento na empresa.  # noqa: E501

        :return: The department_code of this CompanyInfo.
        :rtype: str
        """
        return self._department_code

    @department_code.setter
    def department_code(self, department_code: str):
        """Sets the department_code of this CompanyInfo.

        Nome ou c처digo do departamento na empresa.  # noqa: E501

        :param department_code: The department_code of this CompanyInfo.
        :type department_code: str
        """

        self._department_code = department_code

    @property
    def contact_person(self) -> str:
        """Gets the contact_person of this CompanyInfo.

        Pessoa de contato.  # noqa: E501

        :return: The contact_person of this CompanyInfo.
        :rtype: str
        """
        return self._contact_person

    @contact_person.setter
    def contact_person(self, contact_person: str):
        """Sets the contact_person of this CompanyInfo.

        Pessoa de contato.  # noqa: E501

        :param contact_person: The contact_person of this CompanyInfo.
        :type contact_person: str
        """

        self._contact_person = contact_person
