# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.credit_info import CreditInfo  # noqa: F401,E501
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server.models.source_audit import SourceAudit  # noqa: F401,E501
from swagger_server import util


class NewAccountRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, issuer_request_id: str=None, ps_product_code: str=None, issuer_account_id: str=None, account_owner: AllOfNewAccountRequestAccountOwner=None, credit_info: CreditInfo=None, billing_address: AllOfNewAccountRequestBillingAddress=None, card_delivery_address: AllOfNewAccountRequestCardDeliveryAddress=None, requesting_company_info: AllOfNewAccountRequestRequestingCompanyInfo=None, bank_account: AllOfNewAccountRequestBankAccount=None, source_audit: SourceAudit=None):  # noqa: E501
        """NewAccountRequest - a model defined in Swagger

        :param issuer_request_id: The issuer_request_id of this NewAccountRequest.  # noqa: E501
        :type issuer_request_id: str
        :param ps_product_code: The ps_product_code of this NewAccountRequest.  # noqa: E501
        :type ps_product_code: str
        :param issuer_account_id: The issuer_account_id of this NewAccountRequest.  # noqa: E501
        :type issuer_account_id: str
        :param account_owner: The account_owner of this NewAccountRequest.  # noqa: E501
        :type account_owner: AllOfNewAccountRequestAccountOwner
        :param credit_info: The credit_info of this NewAccountRequest.  # noqa: E501
        :type credit_info: CreditInfo
        :param billing_address: The billing_address of this NewAccountRequest.  # noqa: E501
        :type billing_address: AllOfNewAccountRequestBillingAddress
        :param card_delivery_address: The card_delivery_address of this NewAccountRequest.  # noqa: E501
        :type card_delivery_address: AllOfNewAccountRequestCardDeliveryAddress
        :param requesting_company_info: The requesting_company_info of this NewAccountRequest.  # noqa: E501
        :type requesting_company_info: AllOfNewAccountRequestRequestingCompanyInfo
        :param bank_account: The bank_account of this NewAccountRequest.  # noqa: E501
        :type bank_account: AllOfNewAccountRequestBankAccount
        :param source_audit: The source_audit of this NewAccountRequest.  # noqa: E501
        :type source_audit: SourceAudit
        """
        self.swagger_types = {
            'issuer_request_id': str,
            'ps_product_code': str,
            'issuer_account_id': str,
            'account_owner': AllOfNewAccountRequestAccountOwner,
            'credit_info': CreditInfo,
            'billing_address': AllOfNewAccountRequestBillingAddress,
            'card_delivery_address': AllOfNewAccountRequestCardDeliveryAddress,
            'requesting_company_info': AllOfNewAccountRequestRequestingCompanyInfo,
            'bank_account': AllOfNewAccountRequestBankAccount,
            'source_audit': SourceAudit
        }

        self.attribute_map = {
            'issuer_request_id': 'issuerRequestId',
            'ps_product_code': 'psProductCode',
            'issuer_account_id': 'issuerAccountId',
            'account_owner': 'accountOwner',
            'credit_info': 'creditInfo',
            'billing_address': 'billingAddress',
            'card_delivery_address': 'cardDeliveryAddress',
            'requesting_company_info': 'requestingCompanyInfo',
            'bank_account': 'bankAccount',
            'source_audit': 'sourceAudit'
        }
        self._issuer_request_id = issuer_request_id
        self._ps_product_code = ps_product_code
        self._issuer_account_id = issuer_account_id
        self._account_owner = account_owner
        self._credit_info = credit_info
        self._billing_address = billing_address
        self._card_delivery_address = card_delivery_address
        self._requesting_company_info = requesting_company_info
        self._bank_account = bank_account
        self._source_audit = source_audit

    @classmethod
    def from_dict(cls, dikt) -> 'NewAccountRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NewAccountRequest of this NewAccountRequest.  # noqa: E501
        :rtype: NewAccountRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issuer_request_id(self) -> str:
        """Gets the issuer_request_id of this NewAccountRequest.

        Identificador único da requisição gerado pelo emissor. Esse identificador é ecoado na resposta. Nenhuma verificação dele é feita por parte da paySmart, o emissor é livre para escolher o valor que quiser.  # noqa: E501

        :return: The issuer_request_id of this NewAccountRequest.
        :rtype: str
        """
        return self._issuer_request_id

    @issuer_request_id.setter
    def issuer_request_id(self, issuer_request_id: str):
        """Sets the issuer_request_id of this NewAccountRequest.

        Identificador único da requisição gerado pelo emissor. Esse identificador é ecoado na resposta. Nenhuma verificação dele é feita por parte da paySmart, o emissor é livre para escolher o valor que quiser.  # noqa: E501

        :param issuer_request_id: The issuer_request_id of this NewAccountRequest.
        :type issuer_request_id: str
        """

        self._issuer_request_id = issuer_request_id

    @property
    def ps_product_code(self) -> str:
        """Gets the ps_product_code of this NewAccountRequest.

        Código do produto. Este código é fornecido pela paySmart para o emissor.  # noqa: E501

        :return: The ps_product_code of this NewAccountRequest.
        :rtype: str
        """
        return self._ps_product_code

    @ps_product_code.setter
    def ps_product_code(self, ps_product_code: str):
        """Sets the ps_product_code of this NewAccountRequest.

        Código do produto. Este código é fornecido pela paySmart para o emissor.  # noqa: E501

        :param ps_product_code: The ps_product_code of this NewAccountRequest.
        :type ps_product_code: str
        """
        if ps_product_code is None:
            raise ValueError("Invalid value for `ps_product_code`, must not be `None`")  # noqa: E501

        self._ps_product_code = ps_product_code

    @property
    def issuer_account_id(self) -> str:
        """Gets the issuer_account_id of this NewAccountRequest.

        Identificador único da conta atribuído pelo emissor.  # noqa: E501

        :return: The issuer_account_id of this NewAccountRequest.
        :rtype: str
        """
        return self._issuer_account_id

    @issuer_account_id.setter
    def issuer_account_id(self, issuer_account_id: str):
        """Sets the issuer_account_id of this NewAccountRequest.

        Identificador único da conta atribuído pelo emissor.  # noqa: E501

        :param issuer_account_id: The issuer_account_id of this NewAccountRequest.
        :type issuer_account_id: str
        """

        self._issuer_account_id = issuer_account_id

    @property
    def account_owner(self) -> AllOfNewAccountRequestAccountOwner:
        """Gets the account_owner of this NewAccountRequest.

        Informações relacionadas ao titular da conta.  # noqa: E501

        :return: The account_owner of this NewAccountRequest.
        :rtype: AllOfNewAccountRequestAccountOwner
        """
        return self._account_owner

    @account_owner.setter
    def account_owner(self, account_owner: AllOfNewAccountRequestAccountOwner):
        """Sets the account_owner of this NewAccountRequest.

        Informações relacionadas ao titular da conta.  # noqa: E501

        :param account_owner: The account_owner of this NewAccountRequest.
        :type account_owner: AllOfNewAccountRequestAccountOwner
        """
        if account_owner is None:
            raise ValueError("Invalid value for `account_owner`, must not be `None`")  # noqa: E501

        self._account_owner = account_owner

    @property
    def credit_info(self) -> CreditInfo:
        """Gets the credit_info of this NewAccountRequest.


        :return: The credit_info of this NewAccountRequest.
        :rtype: CreditInfo
        """
        return self._credit_info

    @credit_info.setter
    def credit_info(self, credit_info: CreditInfo):
        """Sets the credit_info of this NewAccountRequest.


        :param credit_info: The credit_info of this NewAccountRequest.
        :type credit_info: CreditInfo
        """

        self._credit_info = credit_info

    @property
    def billing_address(self) -> AllOfNewAccountRequestBillingAddress:
        """Gets the billing_address of this NewAccountRequest.

        Endereço de faturamento da conta.  # noqa: E501

        :return: The billing_address of this NewAccountRequest.
        :rtype: AllOfNewAccountRequestBillingAddress
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address: AllOfNewAccountRequestBillingAddress):
        """Sets the billing_address of this NewAccountRequest.

        Endereço de faturamento da conta.  # noqa: E501

        :param billing_address: The billing_address of this NewAccountRequest.
        :type billing_address: AllOfNewAccountRequestBillingAddress
        """
        if billing_address is None:
            raise ValueError("Invalid value for `billing_address`, must not be `None`")  # noqa: E501

        self._billing_address = billing_address

    @property
    def card_delivery_address(self) -> AllOfNewAccountRequestCardDeliveryAddress:
        """Gets the card_delivery_address of this NewAccountRequest.

        Endereço para entrega do cartão.  # noqa: E501

        :return: The card_delivery_address of this NewAccountRequest.
        :rtype: AllOfNewAccountRequestCardDeliveryAddress
        """
        return self._card_delivery_address

    @card_delivery_address.setter
    def card_delivery_address(self, card_delivery_address: AllOfNewAccountRequestCardDeliveryAddress):
        """Sets the card_delivery_address of this NewAccountRequest.

        Endereço para entrega do cartão.  # noqa: E501

        :param card_delivery_address: The card_delivery_address of this NewAccountRequest.
        :type card_delivery_address: AllOfNewAccountRequestCardDeliveryAddress
        """
        if card_delivery_address is None:
            raise ValueError("Invalid value for `card_delivery_address`, must not be `None`")  # noqa: E501

        self._card_delivery_address = card_delivery_address

    @property
    def requesting_company_info(self) -> AllOfNewAccountRequestRequestingCompanyInfo:
        """Gets the requesting_company_info of this NewAccountRequest.

        Informações da companhia solicitante (opcional, só necessário em produtos B2B).  # noqa: E501

        :return: The requesting_company_info of this NewAccountRequest.
        :rtype: AllOfNewAccountRequestRequestingCompanyInfo
        """
        return self._requesting_company_info

    @requesting_company_info.setter
    def requesting_company_info(self, requesting_company_info: AllOfNewAccountRequestRequestingCompanyInfo):
        """Sets the requesting_company_info of this NewAccountRequest.

        Informações da companhia solicitante (opcional, só necessário em produtos B2B).  # noqa: E501

        :param requesting_company_info: The requesting_company_info of this NewAccountRequest.
        :type requesting_company_info: AllOfNewAccountRequestRequestingCompanyInfo
        """

        self._requesting_company_info = requesting_company_info

    @property
    def bank_account(self) -> AllOfNewAccountRequestBankAccount:
        """Gets the bank_account of this NewAccountRequest.

        Informações da conta bancária associada a essa conta (opcional).  # noqa: E501

        :return: The bank_account of this NewAccountRequest.
        :rtype: AllOfNewAccountRequestBankAccount
        """
        return self._bank_account

    @bank_account.setter
    def bank_account(self, bank_account: AllOfNewAccountRequestBankAccount):
        """Sets the bank_account of this NewAccountRequest.

        Informações da conta bancária associada a essa conta (opcional).  # noqa: E501

        :param bank_account: The bank_account of this NewAccountRequest.
        :type bank_account: AllOfNewAccountRequestBankAccount
        """

        self._bank_account = bank_account

    @property
    def source_audit(self) -> SourceAudit:
        """Gets the source_audit of this NewAccountRequest.


        :return: The source_audit of this NewAccountRequest.
        :rtype: SourceAudit
        """
        return self._source_audit

    @source_audit.setter
    def source_audit(self, source_audit: SourceAudit):
        """Sets the source_audit of this NewAccountRequest.


        :param source_audit: The source_audit of this NewAccountRequest.
        :type source_audit: SourceAudit
        """

        self._source_audit = source_audit
