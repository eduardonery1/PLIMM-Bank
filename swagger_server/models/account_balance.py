# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class AccountBalance(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, account_id: str=None, balance: AllOfAccountBalanceBalance=None, credit_limit: AllOfAccountBalanceCreditLimit=None, withdrawal_credit_limit: AllOfAccountBalanceWithdrawalCreditLimit=None, current_credit_limit: AllOfAccountBalanceCurrentCreditLimit=None, current_withdrawal_credit_limit: AllOfAccountBalanceCurrentWithdrawalCreditLimit=None, payment_due: int=None, query_date: datetime=None):  # noqa: E501
        """AccountBalance - a model defined in Swagger

        :param account_id: The account_id of this AccountBalance.  # noqa: E501
        :type account_id: str
        :param balance: The balance of this AccountBalance.  # noqa: E501
        :type balance: AllOfAccountBalanceBalance
        :param credit_limit: The credit_limit of this AccountBalance.  # noqa: E501
        :type credit_limit: AllOfAccountBalanceCreditLimit
        :param withdrawal_credit_limit: The withdrawal_credit_limit of this AccountBalance.  # noqa: E501
        :type withdrawal_credit_limit: AllOfAccountBalanceWithdrawalCreditLimit
        :param current_credit_limit: The current_credit_limit of this AccountBalance.  # noqa: E501
        :type current_credit_limit: AllOfAccountBalanceCurrentCreditLimit
        :param current_withdrawal_credit_limit: The current_withdrawal_credit_limit of this AccountBalance.  # noqa: E501
        :type current_withdrawal_credit_limit: AllOfAccountBalanceCurrentWithdrawalCreditLimit
        :param payment_due: The payment_due of this AccountBalance.  # noqa: E501
        :type payment_due: int
        :param query_date: The query_date of this AccountBalance.  # noqa: E501
        :type query_date: datetime
        """
        self.swagger_types = {
            'account_id': str,
            'balance': AllOfAccountBalanceBalance,
            'credit_limit': AllOfAccountBalanceCreditLimit,
            'withdrawal_credit_limit': AllOfAccountBalanceWithdrawalCreditLimit,
            'current_credit_limit': AllOfAccountBalanceCurrentCreditLimit,
            'current_withdrawal_credit_limit': AllOfAccountBalanceCurrentWithdrawalCreditLimit,
            'payment_due': int,
            'query_date': datetime
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'balance': 'balance',
            'credit_limit': 'creditLimit',
            'withdrawal_credit_limit': 'withdrawalCreditLimit',
            'current_credit_limit': 'currentCreditLimit',
            'current_withdrawal_credit_limit': 'currentWithdrawalCreditLimit',
            'payment_due': 'paymentDue',
            'query_date': 'query_date'
        }
        self._account_id = account_id
        self._balance = balance
        self._credit_limit = credit_limit
        self._withdrawal_credit_limit = withdrawal_credit_limit
        self._current_credit_limit = current_credit_limit
        self._current_withdrawal_credit_limit = current_withdrawal_credit_limit
        self._payment_due = payment_due
        self._query_date = query_date

    @classmethod
    def from_dict(cls, dikt) -> 'AccountBalance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccountBalance of this AccountBalance.  # noqa: E501
        :rtype: AccountBalance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self) -> str:
        """Gets the account_id of this AccountBalance.

        Identificador único da conta.  # noqa: E501

        :return: The account_id of this AccountBalance.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id: str):
        """Sets the account_id of this AccountBalance.

        Identificador único da conta.  # noqa: E501

        :param account_id: The account_id of this AccountBalance.
        :type account_id: str
        """
        if account_id is None:
            raise ValueError("Invalid value for `account_id`, must not be `None`")  # noqa: E501

        self._account_id = account_id

    @property
    def balance(self) -> AllOfAccountBalanceBalance:
        """Gets the balance of this AccountBalance.

        Saldo de compras da conta  # noqa: E501

        :return: The balance of this AccountBalance.
        :rtype: AllOfAccountBalanceBalance
        """
        return self._balance

    @balance.setter
    def balance(self, balance: AllOfAccountBalanceBalance):
        """Sets the balance of this AccountBalance.

        Saldo de compras da conta  # noqa: E501

        :param balance: The balance of this AccountBalance.
        :type balance: AllOfAccountBalanceBalance
        """
        if balance is None:
            raise ValueError("Invalid value for `balance`, must not be `None`")  # noqa: E501

        self._balance = balance

    @property
    def credit_limit(self) -> AllOfAccountBalanceCreditLimit:
        """Gets the credit_limit of this AccountBalance.

        Para produtos de crédito pós-pago: Valor limite de crédito atribuído à conta pelo emissor.  # noqa: E501

        :return: The credit_limit of this AccountBalance.
        :rtype: AllOfAccountBalanceCreditLimit
        """
        return self._credit_limit

    @credit_limit.setter
    def credit_limit(self, credit_limit: AllOfAccountBalanceCreditLimit):
        """Sets the credit_limit of this AccountBalance.

        Para produtos de crédito pós-pago: Valor limite de crédito atribuído à conta pelo emissor.  # noqa: E501

        :param credit_limit: The credit_limit of this AccountBalance.
        :type credit_limit: AllOfAccountBalanceCreditLimit
        """

        self._credit_limit = credit_limit

    @property
    def withdrawal_credit_limit(self) -> AllOfAccountBalanceWithdrawalCreditLimit:
        """Gets the withdrawal_credit_limit of this AccountBalance.

        Para produtos de crédito pós-pago: Valor limite de crédito para saques atribuído à conta pelo emissor.  # noqa: E501

        :return: The withdrawal_credit_limit of this AccountBalance.
        :rtype: AllOfAccountBalanceWithdrawalCreditLimit
        """
        return self._withdrawal_credit_limit

    @withdrawal_credit_limit.setter
    def withdrawal_credit_limit(self, withdrawal_credit_limit: AllOfAccountBalanceWithdrawalCreditLimit):
        """Sets the withdrawal_credit_limit of this AccountBalance.

        Para produtos de crédito pós-pago: Valor limite de crédito para saques atribuído à conta pelo emissor.  # noqa: E501

        :param withdrawal_credit_limit: The withdrawal_credit_limit of this AccountBalance.
        :type withdrawal_credit_limit: AllOfAccountBalanceWithdrawalCreditLimit
        """

        self._withdrawal_credit_limit = withdrawal_credit_limit

    @property
    def current_credit_limit(self) -> AllOfAccountBalanceCurrentCreditLimit:
        """Gets the current_credit_limit of this AccountBalance.

        Para produtos de crédito pós-pago: Valor do limite disponível atualmente para a conta, já descontando o saldo.  # noqa: E501

        :return: The current_credit_limit of this AccountBalance.
        :rtype: AllOfAccountBalanceCurrentCreditLimit
        """
        return self._current_credit_limit

    @current_credit_limit.setter
    def current_credit_limit(self, current_credit_limit: AllOfAccountBalanceCurrentCreditLimit):
        """Sets the current_credit_limit of this AccountBalance.

        Para produtos de crédito pós-pago: Valor do limite disponível atualmente para a conta, já descontando o saldo.  # noqa: E501

        :param current_credit_limit: The current_credit_limit of this AccountBalance.
        :type current_credit_limit: AllOfAccountBalanceCurrentCreditLimit
        """

        self._current_credit_limit = current_credit_limit

    @property
    def current_withdrawal_credit_limit(self) -> AllOfAccountBalanceCurrentWithdrawalCreditLimit:
        """Gets the current_withdrawal_credit_limit of this AccountBalance.

        Para produtos de crédito pós-pago: Valor limite atualmente disponível para saques, j´descontando gastos.  # noqa: E501

        :return: The current_withdrawal_credit_limit of this AccountBalance.
        :rtype: AllOfAccountBalanceCurrentWithdrawalCreditLimit
        """
        return self._current_withdrawal_credit_limit

    @current_withdrawal_credit_limit.setter
    def current_withdrawal_credit_limit(self, current_withdrawal_credit_limit: AllOfAccountBalanceCurrentWithdrawalCreditLimit):
        """Sets the current_withdrawal_credit_limit of this AccountBalance.

        Para produtos de crédito pós-pago: Valor limite atualmente disponível para saques, j´descontando gastos.  # noqa: E501

        :param current_withdrawal_credit_limit: The current_withdrawal_credit_limit of this AccountBalance.
        :type current_withdrawal_credit_limit: AllOfAccountBalanceCurrentWithdrawalCreditLimit
        """

        self._current_withdrawal_credit_limit = current_withdrawal_credit_limit

    @property
    def payment_due(self) -> int:
        """Gets the payment_due of this AccountBalance.

        Para produtos de crédito pós-pago: Dia de vencimento da fatura mensal.  # noqa: E501

        :return: The payment_due of this AccountBalance.
        :rtype: int
        """
        return self._payment_due

    @payment_due.setter
    def payment_due(self, payment_due: int):
        """Sets the payment_due of this AccountBalance.

        Para produtos de crédito pós-pago: Dia de vencimento da fatura mensal.  # noqa: E501

        :param payment_due: The payment_due of this AccountBalance.
        :type payment_due: int
        """

        self._payment_due = payment_due

    @property
    def query_date(self) -> datetime:
        """Gets the query_date of this AccountBalance.

        Data de consulta.  # noqa: E501

        :return: The query_date of this AccountBalance.
        :rtype: datetime
        """
        return self._query_date

    @query_date.setter
    def query_date(self, query_date: datetime):
        """Sets the query_date of this AccountBalance.

        Data de consulta.  # noqa: E501

        :param query_date: The query_date of this AccountBalance.
        :type query_date: datetime
        """

        self._query_date = query_date
