# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.amount import Amount  # noqa: F401,E501
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class Installment(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, installment_date: Object=None, amount: Amount=None):  # noqa: E501
        """Installment - a model defined in Swagger

        :param installment_date: The installment_date of this Installment.  # noqa: E501
        :type installment_date: Object
        :param amount: The amount of this Installment.  # noqa: E501
        :type amount: Amount
        """
        self.swagger_types = {
            'installment_date': Object,
            'amount': Amount
        }

        self.attribute_map = {
            'installment_date': 'installmentDate',
            'amount': 'amount'
        }
        self._installment_date = installment_date
        self._amount = amount

    @classmethod
    def from_dict(cls, dikt) -> 'Installment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Installment of this Installment.  # noqa: E501
        :rtype: Installment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def installment_date(self) -> Object:
        """Gets the installment_date of this Installment.

        Data da parcela.  # noqa: E501

        :return: The installment_date of this Installment.
        :rtype: Object
        """
        return self._installment_date

    @installment_date.setter
    def installment_date(self, installment_date: Object):
        """Sets the installment_date of this Installment.

        Data da parcela.  # noqa: E501

        :param installment_date: The installment_date of this Installment.
        :type installment_date: Object
        """
        if installment_date is None:
            raise ValueError("Invalid value for `installment_date`, must not be `None`")  # noqa: E501

        self._installment_date = installment_date

    @property
    def amount(self) -> Amount:
        """Gets the amount of this Installment.


        :return: The amount of this Installment.
        :rtype: Amount
        """
        return self._amount

    @amount.setter
    def amount(self, amount: Amount):
        """Sets the amount of this Installment.


        :param amount: The amount of this Installment.
        :type amount: Amount
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")  # noqa: E501

        self._amount = amount
