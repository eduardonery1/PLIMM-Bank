# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.amount import Amount  # noqa: F401,E501
from swagger_server import util


class InstallmentRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, number_of_installments: int=None, installment_amount: Amount=None):  # noqa: E501
        """InstallmentRequest - a model defined in Swagger

        :param number_of_installments: The number_of_installments of this InstallmentRequest.  # noqa: E501
        :type number_of_installments: int
        :param installment_amount: The installment_amount of this InstallmentRequest.  # noqa: E501
        :type installment_amount: Amount
        """
        self.swagger_types = {
            'number_of_installments': int,
            'installment_amount': Amount
        }

        self.attribute_map = {
            'number_of_installments': 'numberOfInstallments',
            'installment_amount': 'installmentAmount'
        }
        self._number_of_installments = number_of_installments
        self._installment_amount = installment_amount

    @classmethod
    def from_dict(cls, dikt) -> 'InstallmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InstallmentRequest of this InstallmentRequest.  # noqa: E501
        :rtype: InstallmentRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_installments(self) -> int:
        """Gets the number_of_installments of this InstallmentRequest.

        Número de parcelas em que o pagamento deve ser quebrado.  # noqa: E501

        :return: The number_of_installments of this InstallmentRequest.
        :rtype: int
        """
        return self._number_of_installments

    @number_of_installments.setter
    def number_of_installments(self, number_of_installments: int):
        """Sets the number_of_installments of this InstallmentRequest.

        Número de parcelas em que o pagamento deve ser quebrado.  # noqa: E501

        :param number_of_installments: The number_of_installments of this InstallmentRequest.
        :type number_of_installments: int
        """
        if number_of_installments is None:
            raise ValueError("Invalid value for `number_of_installments`, must not be `None`")  # noqa: E501

        self._number_of_installments = number_of_installments

    @property
    def installment_amount(self) -> Amount:
        """Gets the installment_amount of this InstallmentRequest.


        :return: The installment_amount of this InstallmentRequest.
        :rtype: Amount
        """
        return self._installment_amount

    @installment_amount.setter
    def installment_amount(self, installment_amount: Amount):
        """Sets the installment_amount of this InstallmentRequest.


        :param installment_amount: The installment_amount of this InstallmentRequest.
        :type installment_amount: Amount
        """

        self._installment_amount = installment_amount
