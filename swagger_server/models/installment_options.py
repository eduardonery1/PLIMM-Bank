# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.amount import Amount  # noqa: F401,E501
from swagger_server.models.installment_option import InstallmentOption  # noqa: F401,E501
from swagger_server import util


class InstallmentOptions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, installment_options: List[InstallmentOption]=None, original_amount: Amount=None):  # noqa: E501
        """InstallmentOptions - a model defined in Swagger

        :param installment_options: The installment_options of this InstallmentOptions.  # noqa: E501
        :type installment_options: List[InstallmentOption]
        :param original_amount: The original_amount of this InstallmentOptions.  # noqa: E501
        :type original_amount: Amount
        """
        self.swagger_types = {
            'installment_options': List[InstallmentOption],
            'original_amount': Amount
        }

        self.attribute_map = {
            'installment_options': 'installmentOptions',
            'original_amount': 'originalAmount'
        }
        self._installment_options = installment_options
        self._original_amount = original_amount

    @classmethod
    def from_dict(cls, dikt) -> 'InstallmentOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InstallmentOptions of this InstallmentOptions.  # noqa: E501
        :rtype: InstallmentOptions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def installment_options(self) -> List[InstallmentOption]:
        """Gets the installment_options of this InstallmentOptions.


        :return: The installment_options of this InstallmentOptions.
        :rtype: List[InstallmentOption]
        """
        return self._installment_options

    @installment_options.setter
    def installment_options(self, installment_options: List[InstallmentOption]):
        """Sets the installment_options of this InstallmentOptions.


        :param installment_options: The installment_options of this InstallmentOptions.
        :type installment_options: List[InstallmentOption]
        """
        if installment_options is None:
            raise ValueError("Invalid value for `installment_options`, must not be `None`")  # noqa: E501

        self._installment_options = installment_options

    @property
    def original_amount(self) -> Amount:
        """Gets the original_amount of this InstallmentOptions.


        :return: The original_amount of this InstallmentOptions.
        :rtype: Amount
        """
        return self._original_amount

    @original_amount.setter
    def original_amount(self, original_amount: Amount):
        """Sets the original_amount of this InstallmentOptions.


        :param original_amount: The original_amount of this InstallmentOptions.
        :type original_amount: Amount
        """
        if original_amount is None:
            raise ValueError("Invalid value for `original_amount`, must not be `None`")  # noqa: E501

        self._original_amount = original_amount
