# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.credit import Credit  # noqa: F401,E501
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class CreditCreatedSuccessfully(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, result_data: AllOfCreditCreatedSuccessfullyResultData=None, credit: Credit=None):  # noqa: E501
        """CreditCreatedSuccessfully - a model defined in Swagger

        :param result_data: The result_data of this CreditCreatedSuccessfully.  # noqa: E501
        :type result_data: AllOfCreditCreatedSuccessfullyResultData
        :param credit: The credit of this CreditCreatedSuccessfully.  # noqa: E501
        :type credit: Credit
        """
        self.swagger_types = {
            'result_data': AllOfCreditCreatedSuccessfullyResultData,
            'credit': Credit
        }

        self.attribute_map = {
            'result_data': 'resultData',
            'credit': 'credit'
        }
        self._result_data = result_data
        self._credit = credit

    @classmethod
    def from_dict(cls, dikt) -> 'CreditCreatedSuccessfully':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreditCreatedSuccessfully of this CreditCreatedSuccessfully.  # noqa: E501
        :rtype: CreditCreatedSuccessfully
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result_data(self) -> AllOfCreditCreatedSuccessfullyResultData:
        """Gets the result_data of this CreditCreatedSuccessfully.


        :return: The result_data of this CreditCreatedSuccessfully.
        :rtype: AllOfCreditCreatedSuccessfullyResultData
        """
        return self._result_data

    @result_data.setter
    def result_data(self, result_data: AllOfCreditCreatedSuccessfullyResultData):
        """Sets the result_data of this CreditCreatedSuccessfully.


        :param result_data: The result_data of this CreditCreatedSuccessfully.
        :type result_data: AllOfCreditCreatedSuccessfullyResultData
        """
        if result_data is None:
            raise ValueError("Invalid value for `result_data`, must not be `None`")  # noqa: E501

        self._result_data = result_data

    @property
    def credit(self) -> Credit:
        """Gets the credit of this CreditCreatedSuccessfully.


        :return: The credit of this CreditCreatedSuccessfully.
        :rtype: Credit
        """
        return self._credit

    @credit.setter
    def credit(self, credit: Credit):
        """Sets the credit of this CreditCreatedSuccessfully.


        :param credit: The credit of this CreditCreatedSuccessfully.
        :type credit: Credit
        """
        if credit is None:
            raise ValueError("Invalid value for `credit`, must not be `None`")  # noqa: E501

        self._credit = credit
