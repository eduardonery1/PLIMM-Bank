# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.dispute_reason import DisputeReason  # noqa: F401,E501
from swagger_server.models.dispute_request import DisputeRequest  # noqa: F401,E501
from swagger_server.models.dispute_status import DisputeStatus  # noqa: F401,E501
from swagger_server import util


class DisputeInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, dispute_type: DisputeRequest=None, dispute_reason: DisputeReason=None, dispute_status: DisputeStatus=None):  # noqa: E501
        """DisputeInfo - a model defined in Swagger

        :param dispute_type: The dispute_type of this DisputeInfo.  # noqa: E501
        :type dispute_type: DisputeRequest
        :param dispute_reason: The dispute_reason of this DisputeInfo.  # noqa: E501
        :type dispute_reason: DisputeReason
        :param dispute_status: The dispute_status of this DisputeInfo.  # noqa: E501
        :type dispute_status: DisputeStatus
        """
        self.swagger_types = {
            'dispute_type': DisputeRequest,
            'dispute_reason': DisputeReason,
            'dispute_status': DisputeStatus
        }

        self.attribute_map = {
            'dispute_type': 'disputeType',
            'dispute_reason': 'disputeReason',
            'dispute_status': 'disputeStatus'
        }
        self._dispute_type = dispute_type
        self._dispute_reason = dispute_reason
        self._dispute_status = dispute_status

    @classmethod
    def from_dict(cls, dikt) -> 'DisputeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DisputeInfo of this DisputeInfo.  # noqa: E501
        :rtype: DisputeInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dispute_type(self) -> DisputeRequest:
        """Gets the dispute_type of this DisputeInfo.


        :return: The dispute_type of this DisputeInfo.
        :rtype: DisputeRequest
        """
        return self._dispute_type

    @dispute_type.setter
    def dispute_type(self, dispute_type: DisputeRequest):
        """Sets the dispute_type of this DisputeInfo.


        :param dispute_type: The dispute_type of this DisputeInfo.
        :type dispute_type: DisputeRequest
        """
        if dispute_type is None:
            raise ValueError("Invalid value for `dispute_type`, must not be `None`")  # noqa: E501

        self._dispute_type = dispute_type

    @property
    def dispute_reason(self) -> DisputeReason:
        """Gets the dispute_reason of this DisputeInfo.


        :return: The dispute_reason of this DisputeInfo.
        :rtype: DisputeReason
        """
        return self._dispute_reason

    @dispute_reason.setter
    def dispute_reason(self, dispute_reason: DisputeReason):
        """Sets the dispute_reason of this DisputeInfo.


        :param dispute_reason: The dispute_reason of this DisputeInfo.
        :type dispute_reason: DisputeReason
        """
        if dispute_reason is None:
            raise ValueError("Invalid value for `dispute_reason`, must not be `None`")  # noqa: E501

        self._dispute_reason = dispute_reason

    @property
    def dispute_status(self) -> DisputeStatus:
        """Gets the dispute_status of this DisputeInfo.


        :return: The dispute_status of this DisputeInfo.
        :rtype: DisputeStatus
        """
        return self._dispute_status

    @dispute_status.setter
    def dispute_status(self, dispute_status: DisputeStatus):
        """Sets the dispute_status of this DisputeInfo.


        :param dispute_status: The dispute_status of this DisputeInfo.
        :type dispute_status: DisputeStatus
        """
        if dispute_status is None:
            raise ValueError("Invalid value for `dispute_status`, must not be `None`")  # noqa: E501

        self._dispute_status = dispute_status
