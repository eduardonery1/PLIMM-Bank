# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.card_block_information import CardBlockInformation  # noqa: F401,E501
from swagger_server import util


class AllOfCardBlockInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, block_code: int=None, requested_by: str=None, description: str=None, block_time: datetime=None):  # noqa: E501
        """AllOfCardBlockInformation - a model defined in Swagger

        :param block_code: The block_code of this AllOfCardBlockInformation.  # noqa: E501
        :type block_code: int
        :param requested_by: The requested_by of this AllOfCardBlockInformation.  # noqa: E501
        :type requested_by: str
        :param description: The description of this AllOfCardBlockInformation.  # noqa: E501
        :type description: str
        :param block_time: The block_time of this AllOfCardBlockInformation.  # noqa: E501
        :type block_time: datetime
        """
        self.swagger_types = {
            'block_code': int,
            'requested_by': str,
            'description': str,
            'block_time': datetime
        }

        self.attribute_map = {
            'block_code': 'blockCode',
            'requested_by': 'requestedBy',
            'description': 'description',
            'block_time': 'blockTime'
        }
        self._block_code = block_code
        self._requested_by = requested_by
        self._description = description
        self._block_time = block_time

    @classmethod
    def from_dict(cls, dikt) -> 'AllOfCardBlockInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AllOfCardBlockInformation of this AllOfCardBlockInformation.  # noqa: E501
        :rtype: AllOfCardBlockInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def block_code(self) -> int:
        """Gets the block_code of this AllOfCardBlockInformation.

        Código identificando o tipo de bloqueio.  # noqa: E501

        :return: The block_code of this AllOfCardBlockInformation.
        :rtype: int
        """
        return self._block_code

    @block_code.setter
    def block_code(self, block_code: int):
        """Sets the block_code of this AllOfCardBlockInformation.

        Código identificando o tipo de bloqueio.  # noqa: E501

        :param block_code: The block_code of this AllOfCardBlockInformation.
        :type block_code: int
        """
        if block_code is None:
            raise ValueError("Invalid value for `block_code`, must not be `None`")  # noqa: E501

        self._block_code = block_code

    @property
    def requested_by(self) -> str:
        """Gets the requested_by of this AllOfCardBlockInformation.

        Indicação de onde (qual departamento ou papel) partiu o pedido de bloqueio.  # noqa: E501

        :return: The requested_by of this AllOfCardBlockInformation.
        :rtype: str
        """
        return self._requested_by

    @requested_by.setter
    def requested_by(self, requested_by: str):
        """Sets the requested_by of this AllOfCardBlockInformation.

        Indicação de onde (qual departamento ou papel) partiu o pedido de bloqueio.  # noqa: E501

        :param requested_by: The requested_by of this AllOfCardBlockInformation.
        :type requested_by: str
        """
        if requested_by is None:
            raise ValueError("Invalid value for `requested_by`, must not be `None`")  # noqa: E501

        self._requested_by = requested_by

    @property
    def description(self) -> str:
        """Gets the description of this AllOfCardBlockInformation.

        Descrição do motivo de bloqueio.  # noqa: E501

        :return: The description of this AllOfCardBlockInformation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this AllOfCardBlockInformation.

        Descrição do motivo de bloqueio.  # noqa: E501

        :param description: The description of this AllOfCardBlockInformation.
        :type description: str
        """

        self._description = description

    @property
    def block_time(self) -> datetime:
        """Gets the block_time of this AllOfCardBlockInformation.

        Data e hora do bloqueio no formato definido pela RFC 3339, seção 5.6.  # noqa: E501

        :return: The block_time of this AllOfCardBlockInformation.
        :rtype: datetime
        """
        return self._block_time

    @block_time.setter
    def block_time(self, block_time: datetime):
        """Sets the block_time of this AllOfCardBlockInformation.

        Data e hora do bloqueio no formato definido pela RFC 3339, seção 5.6.  # noqa: E501

        :param block_time: The block_time of this AllOfCardBlockInformation.
        :type block_time: datetime
        """
        if block_time is None:
            raise ValueError("Invalid value for `block_time`, must not be `None`")  # noqa: E501

        self._block_time = block_time
