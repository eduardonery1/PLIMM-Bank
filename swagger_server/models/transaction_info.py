# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TransactionInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, type: str=None, reference_label: str=None, merchant_id: str=None, terminal_id: str=None, authorization_code: str=None, authentication_code: str=None, host_nsu: str=None, terminal_nsu: str=None, approval_timestamp: str=None):  # noqa: E501
        """TransactionInfo - a model defined in Swagger

        :param type: The type of this TransactionInfo.  # noqa: E501
        :type type: str
        :param reference_label: The reference_label of this TransactionInfo.  # noqa: E501
        :type reference_label: str
        :param merchant_id: The merchant_id of this TransactionInfo.  # noqa: E501
        :type merchant_id: str
        :param terminal_id: The terminal_id of this TransactionInfo.  # noqa: E501
        :type terminal_id: str
        :param authorization_code: The authorization_code of this TransactionInfo.  # noqa: E501
        :type authorization_code: str
        :param authentication_code: The authentication_code of this TransactionInfo.  # noqa: E501
        :type authentication_code: str
        :param host_nsu: The host_nsu of this TransactionInfo.  # noqa: E501
        :type host_nsu: str
        :param terminal_nsu: The terminal_nsu of this TransactionInfo.  # noqa: E501
        :type terminal_nsu: str
        :param approval_timestamp: The approval_timestamp of this TransactionInfo.  # noqa: E501
        :type approval_timestamp: str
        """
        self.swagger_types = {
            'type': str,
            'reference_label': str,
            'merchant_id': str,
            'terminal_id': str,
            'authorization_code': str,
            'authentication_code': str,
            'host_nsu': str,
            'terminal_nsu': str,
            'approval_timestamp': str
        }

        self.attribute_map = {
            'type': 'type',
            'reference_label': 'reference_label',
            'merchant_id': 'merchant_id',
            'terminal_id': 'terminal_id',
            'authorization_code': 'authorization_code',
            'authentication_code': 'authentication_code',
            'host_nsu': 'host_nsu',
            'terminal_nsu': 'terminal_nsu',
            'approval_timestamp': 'approval_timestamp'
        }
        self._type = type
        self._reference_label = reference_label
        self._merchant_id = merchant_id
        self._terminal_id = terminal_id
        self._authorization_code = authorization_code
        self._authentication_code = authentication_code
        self._host_nsu = host_nsu
        self._terminal_nsu = terminal_nsu
        self._approval_timestamp = approval_timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'TransactionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TransactionInfo of this TransactionInfo.  # noqa: E501
        :rtype: TransactionInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this TransactionInfo.


        :return: The type of this TransactionInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this TransactionInfo.


        :param type: The type of this TransactionInfo.
        :type type: str
        """

        self._type = type

    @property
    def reference_label(self) -> str:
        """Gets the reference_label of this TransactionInfo.


        :return: The reference_label of this TransactionInfo.
        :rtype: str
        """
        return self._reference_label

    @reference_label.setter
    def reference_label(self, reference_label: str):
        """Sets the reference_label of this TransactionInfo.


        :param reference_label: The reference_label of this TransactionInfo.
        :type reference_label: str
        """

        self._reference_label = reference_label

    @property
    def merchant_id(self) -> str:
        """Gets the merchant_id of this TransactionInfo.


        :return: The merchant_id of this TransactionInfo.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id: str):
        """Sets the merchant_id of this TransactionInfo.


        :param merchant_id: The merchant_id of this TransactionInfo.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def terminal_id(self) -> str:
        """Gets the terminal_id of this TransactionInfo.


        :return: The terminal_id of this TransactionInfo.
        :rtype: str
        """
        return self._terminal_id

    @terminal_id.setter
    def terminal_id(self, terminal_id: str):
        """Sets the terminal_id of this TransactionInfo.


        :param terminal_id: The terminal_id of this TransactionInfo.
        :type terminal_id: str
        """

        self._terminal_id = terminal_id

    @property
    def authorization_code(self) -> str:
        """Gets the authorization_code of this TransactionInfo.


        :return: The authorization_code of this TransactionInfo.
        :rtype: str
        """
        return self._authorization_code

    @authorization_code.setter
    def authorization_code(self, authorization_code: str):
        """Sets the authorization_code of this TransactionInfo.


        :param authorization_code: The authorization_code of this TransactionInfo.
        :type authorization_code: str
        """

        self._authorization_code = authorization_code

    @property
    def authentication_code(self) -> str:
        """Gets the authentication_code of this TransactionInfo.


        :return: The authentication_code of this TransactionInfo.
        :rtype: str
        """
        return self._authentication_code

    @authentication_code.setter
    def authentication_code(self, authentication_code: str):
        """Sets the authentication_code of this TransactionInfo.


        :param authentication_code: The authentication_code of this TransactionInfo.
        :type authentication_code: str
        """

        self._authentication_code = authentication_code

    @property
    def host_nsu(self) -> str:
        """Gets the host_nsu of this TransactionInfo.


        :return: The host_nsu of this TransactionInfo.
        :rtype: str
        """
        return self._host_nsu

    @host_nsu.setter
    def host_nsu(self, host_nsu: str):
        """Sets the host_nsu of this TransactionInfo.


        :param host_nsu: The host_nsu of this TransactionInfo.
        :type host_nsu: str
        """

        self._host_nsu = host_nsu

    @property
    def terminal_nsu(self) -> str:
        """Gets the terminal_nsu of this TransactionInfo.


        :return: The terminal_nsu of this TransactionInfo.
        :rtype: str
        """
        return self._terminal_nsu

    @terminal_nsu.setter
    def terminal_nsu(self, terminal_nsu: str):
        """Sets the terminal_nsu of this TransactionInfo.


        :param terminal_nsu: The terminal_nsu of this TransactionInfo.
        :type terminal_nsu: str
        """

        self._terminal_nsu = terminal_nsu

    @property
    def approval_timestamp(self) -> str:
        """Gets the approval_timestamp of this TransactionInfo.


        :return: The approval_timestamp of this TransactionInfo.
        :rtype: str
        """
        return self._approval_timestamp

    @approval_timestamp.setter
    def approval_timestamp(self, approval_timestamp: str):
        """Sets the approval_timestamp of this TransactionInfo.


        :param approval_timestamp: The approval_timestamp of this TransactionInfo.
        :type approval_timestamp: str
        """

        self._approval_timestamp = approval_timestamp
