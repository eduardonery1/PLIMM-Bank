# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DisputeType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SERVICE_NOT_OFFERED_OR_PRODUCT_NOT_DELIVERED = "service_not_offered_or_product_not_delivered"
    RECURRING_TRANSACTION_CANCELLED = "recurring_transaction_cancelled"
    PRODUCT_DEFECTIVE_OR_DIFFERING_FROM_DESCRIPTION = "product_defective_or_differing_from_description"
    MULTIPLE_FRAUDULENT_TRANSACTIONS = "multiple_fraudulent_transactions"
    ILLEGIBLE_DOCUMENT = "illegible_document"
    CHIP_RESPONSABILITY_TRANSFERENCE = "chip_responsability_transference"
    AUTHORIZATION_DENIED = "authorization_denied"
    NO_AUTHORIZATION = "no_authorization"
    EXPIRED_CARD = "expired_card"
    LATE_PRESENTATION = "late_presentation"
    HOLDER_DOES_NO_RECALL_TRANSACTION = "holder_does_no_recall_transaction"
    NON_EXISTING_CARD_NUMBER = "non_existing_card_number"
    INCORRECT_TRANSACTION_VALUE = "incorrect_transaction_value"
    CARD_PRESENT_FRAUD = "card_present_fraud"
    DUPLICATED_PROCESSING = "duplicated_processing"
    CARD_NOT_PRESENT_FRAUD = "card_not_present_fraud"
    CREDIT_NOT_PROCESSED = "credit_not_processed"
    PAYMENT_BY_OTHER_MEANS = "payment_by_other_means"
    def __init__(self):  # noqa: E501
        """DisputeType - a model defined in Swagger

        """
        self.swagger_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'DisputeType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DisputeType of this DisputeType.  # noqa: E501
        :rtype: DisputeType
        """
        return util.deserialize_model(dikt, cls)
