# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class UpdateCardRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, issuer_request_id: str=None, issuer_card_id: str=None, cardholder: AllOfUpdateCardRequestCardholder=None):  # noqa: E501
        """UpdateCardRequest - a model defined in Swagger

        :param issuer_request_id: The issuer_request_id of this UpdateCardRequest.  # noqa: E501
        :type issuer_request_id: str
        :param issuer_card_id: The issuer_card_id of this UpdateCardRequest.  # noqa: E501
        :type issuer_card_id: str
        :param cardholder: The cardholder of this UpdateCardRequest.  # noqa: E501
        :type cardholder: AllOfUpdateCardRequestCardholder
        """
        self.swagger_types = {
            'issuer_request_id': str,
            'issuer_card_id': str,
            'cardholder': AllOfUpdateCardRequestCardholder
        }

        self.attribute_map = {
            'issuer_request_id': 'issuerRequestId',
            'issuer_card_id': 'issuerCardId',
            'cardholder': 'cardholder'
        }
        self._issuer_request_id = issuer_request_id
        self._issuer_card_id = issuer_card_id
        self._cardholder = cardholder

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateCardRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateCardRequest of this UpdateCardRequest.  # noqa: E501
        :rtype: UpdateCardRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issuer_request_id(self) -> str:
        """Gets the issuer_request_id of this UpdateCardRequest.

        Identificador único da requisição gerado pelo emissor. Esse identificador é ecoado na resposta. Nenhuma verificação dele é feita por parte da paySmart, o emissor é livre para escolher o valor que quiser.  # noqa: E501

        :return: The issuer_request_id of this UpdateCardRequest.
        :rtype: str
        """
        return self._issuer_request_id

    @issuer_request_id.setter
    def issuer_request_id(self, issuer_request_id: str):
        """Sets the issuer_request_id of this UpdateCardRequest.

        Identificador único da requisição gerado pelo emissor. Esse identificador é ecoado na resposta. Nenhuma verificação dele é feita por parte da paySmart, o emissor é livre para escolher o valor que quiser.  # noqa: E501

        :param issuer_request_id: The issuer_request_id of this UpdateCardRequest.
        :type issuer_request_id: str
        """

        self._issuer_request_id = issuer_request_id

    @property
    def issuer_card_id(self) -> str:
        """Gets the issuer_card_id of this UpdateCardRequest.

        Identificador único para esse cartão no emissor.  # noqa: E501

        :return: The issuer_card_id of this UpdateCardRequest.
        :rtype: str
        """
        return self._issuer_card_id

    @issuer_card_id.setter
    def issuer_card_id(self, issuer_card_id: str):
        """Sets the issuer_card_id of this UpdateCardRequest.

        Identificador único para esse cartão no emissor.  # noqa: E501

        :param issuer_card_id: The issuer_card_id of this UpdateCardRequest.
        :type issuer_card_id: str
        """

        self._issuer_card_id = issuer_card_id

    @property
    def cardholder(self) -> AllOfUpdateCardRequestCardholder:
        """Gets the cardholder of this UpdateCardRequest.

        Informações relacionadas ao portador do cartão.  # noqa: E501

        :return: The cardholder of this UpdateCardRequest.
        :rtype: AllOfUpdateCardRequestCardholder
        """
        return self._cardholder

    @cardholder.setter
    def cardholder(self, cardholder: AllOfUpdateCardRequestCardholder):
        """Sets the cardholder of this UpdateCardRequest.

        Informações relacionadas ao portador do cartão.  # noqa: E501

        :param cardholder: The cardholder of this UpdateCardRequest.
        :type cardholder: AllOfUpdateCardRequestCardholder
        """
        if cardholder is None:
            raise ValueError("Invalid value for `cardholder`, must not be `None`")  # noqa: E501

        self._cardholder = cardholder
