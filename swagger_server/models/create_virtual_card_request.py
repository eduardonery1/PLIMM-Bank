# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class CreateVirtualCardRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, issuer_request_id: str=None, constraints: AllOfCreateVirtualCardRequestConstraints=None):  # noqa: E501
        """CreateVirtualCardRequest - a model defined in Swagger

        :param issuer_request_id: The issuer_request_id of this CreateVirtualCardRequest.  # noqa: E501
        :type issuer_request_id: str
        :param constraints: The constraints of this CreateVirtualCardRequest.  # noqa: E501
        :type constraints: AllOfCreateVirtualCardRequestConstraints
        """
        self.swagger_types = {
            'issuer_request_id': str,
            'constraints': AllOfCreateVirtualCardRequestConstraints
        }

        self.attribute_map = {
            'issuer_request_id': 'issuerRequestId',
            'constraints': 'constraints'
        }
        self._issuer_request_id = issuer_request_id
        self._constraints = constraints

    @classmethod
    def from_dict(cls, dikt) -> 'CreateVirtualCardRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateVirtualCardRequest of this CreateVirtualCardRequest.  # noqa: E501
        :rtype: CreateVirtualCardRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issuer_request_id(self) -> str:
        """Gets the issuer_request_id of this CreateVirtualCardRequest.

        Identificador único da requisição gerado pelo emissor. Esse identificador é ecoado na resposta. Nenhuma verificação dele é feita por parte da paySmart, o emissor é livre para escolher o valor que quiser.  # noqa: E501

        :return: The issuer_request_id of this CreateVirtualCardRequest.
        :rtype: str
        """
        return self._issuer_request_id

    @issuer_request_id.setter
    def issuer_request_id(self, issuer_request_id: str):
        """Sets the issuer_request_id of this CreateVirtualCardRequest.

        Identificador único da requisição gerado pelo emissor. Esse identificador é ecoado na resposta. Nenhuma verificação dele é feita por parte da paySmart, o emissor é livre para escolher o valor que quiser.  # noqa: E501

        :param issuer_request_id: The issuer_request_id of this CreateVirtualCardRequest.
        :type issuer_request_id: str
        """

        self._issuer_request_id = issuer_request_id

    @property
    def constraints(self) -> AllOfCreateVirtualCardRequestConstraints:
        """Gets the constraints of this CreateVirtualCardRequest.

        Restrições de operação do cartão virtual que está sendo criado  # noqa: E501

        :return: The constraints of this CreateVirtualCardRequest.
        :rtype: AllOfCreateVirtualCardRequestConstraints
        """
        return self._constraints

    @constraints.setter
    def constraints(self, constraints: AllOfCreateVirtualCardRequestConstraints):
        """Sets the constraints of this CreateVirtualCardRequest.

        Restrições de operação do cartão virtual que está sendo criado  # noqa: E501

        :param constraints: The constraints of this CreateVirtualCardRequest.
        :type constraints: AllOfCreateVirtualCardRequestConstraints
        """

        self._constraints = constraints
