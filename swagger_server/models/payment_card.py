# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.qrcode_error import QRCODEError  # noqa: F401,E501
from swagger_server.models.transaction_info import TransactionInfo  # noqa: F401,E501
from swagger_server import util


class PaymentCard(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, status: str=None, error: QRCODEError=None, transaction_info: TransactionInfo=None):  # noqa: E501
        """PaymentCard - a model defined in Swagger

        :param status: The status of this PaymentCard.  # noqa: E501
        :type status: str
        :param error: The error of this PaymentCard.  # noqa: E501
        :type error: QRCODEError
        :param transaction_info: The transaction_info of this PaymentCard.  # noqa: E501
        :type transaction_info: TransactionInfo
        """
        self.swagger_types = {
            'status': str,
            'error': QRCODEError,
            'transaction_info': TransactionInfo
        }

        self.attribute_map = {
            'status': 'status',
            'error': 'error',
            'transaction_info': 'transaction_info'
        }
        self._status = status
        self._error = error
        self._transaction_info = transaction_info

    @classmethod
    def from_dict(cls, dikt) -> 'PaymentCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PaymentCard of this PaymentCard.  # noqa: E501
        :rtype: PaymentCard
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> str:
        """Gets the status of this PaymentCard.


        :return: The status of this PaymentCard.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this PaymentCard.


        :param status: The status of this PaymentCard.
        :type status: str
        """

        self._status = status

    @property
    def error(self) -> QRCODEError:
        """Gets the error of this PaymentCard.


        :return: The error of this PaymentCard.
        :rtype: QRCODEError
        """
        return self._error

    @error.setter
    def error(self, error: QRCODEError):
        """Sets the error of this PaymentCard.


        :param error: The error of this PaymentCard.
        :type error: QRCODEError
        """

        self._error = error

    @property
    def transaction_info(self) -> TransactionInfo:
        """Gets the transaction_info of this PaymentCard.


        :return: The transaction_info of this PaymentCard.
        :rtype: TransactionInfo
        """
        return self._transaction_info

    @transaction_info.setter
    def transaction_info(self, transaction_info: TransactionInfo):
        """Sets the transaction_info of this PaymentCard.


        :param transaction_info: The transaction_info of this PaymentCard.
        :type transaction_info: TransactionInfo
        """

        self._transaction_info = transaction_info
