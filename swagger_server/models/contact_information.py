# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ContactInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, personal_phone_number1: str=None, personal_phone_number2: str=None, comercial_phone_number1: str=None, email: str=None):  # noqa: E501
        """ContactInformation - a model defined in Swagger

        :param personal_phone_number1: The personal_phone_number1 of this ContactInformation.  # noqa: E501
        :type personal_phone_number1: str
        :param personal_phone_number2: The personal_phone_number2 of this ContactInformation.  # noqa: E501
        :type personal_phone_number2: str
        :param comercial_phone_number1: The comercial_phone_number1 of this ContactInformation.  # noqa: E501
        :type comercial_phone_number1: str
        :param email: The email of this ContactInformation.  # noqa: E501
        :type email: str
        """
        self.swagger_types = {
            'personal_phone_number1': str,
            'personal_phone_number2': str,
            'comercial_phone_number1': str,
            'email': str
        }

        self.attribute_map = {
            'personal_phone_number1': 'personalPhoneNumber1',
            'personal_phone_number2': 'personalPhoneNumber2',
            'comercial_phone_number1': 'comercialPhoneNumber1',
            'email': 'email'
        }
        self._personal_phone_number1 = personal_phone_number1
        self._personal_phone_number2 = personal_phone_number2
        self._comercial_phone_number1 = comercial_phone_number1
        self._email = email

    @classmethod
    def from_dict(cls, dikt) -> 'ContactInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ContactInformation of this ContactInformation.  # noqa: E501
        :rtype: ContactInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def personal_phone_number1(self) -> str:
        """Gets the personal_phone_number1 of this ContactInformation.

        Telefone celular pessoal no formato +DDI DDD NNNNNNNNN  # noqa: E501

        :return: The personal_phone_number1 of this ContactInformation.
        :rtype: str
        """
        return self._personal_phone_number1

    @personal_phone_number1.setter
    def personal_phone_number1(self, personal_phone_number1: str):
        """Sets the personal_phone_number1 of this ContactInformation.

        Telefone celular pessoal no formato +DDI DDD NNNNNNNNN  # noqa: E501

        :param personal_phone_number1: The personal_phone_number1 of this ContactInformation.
        :type personal_phone_number1: str
        """

        self._personal_phone_number1 = personal_phone_number1

    @property
    def personal_phone_number2(self) -> str:
        """Gets the personal_phone_number2 of this ContactInformation.

        Telefone residencial (fixo) no formato +DDI DDD NNNNNNNNN  # noqa: E501

        :return: The personal_phone_number2 of this ContactInformation.
        :rtype: str
        """
        return self._personal_phone_number2

    @personal_phone_number2.setter
    def personal_phone_number2(self, personal_phone_number2: str):
        """Sets the personal_phone_number2 of this ContactInformation.

        Telefone residencial (fixo) no formato +DDI DDD NNNNNNNNN  # noqa: E501

        :param personal_phone_number2: The personal_phone_number2 of this ContactInformation.
        :type personal_phone_number2: str
        """

        self._personal_phone_number2 = personal_phone_number2

    @property
    def comercial_phone_number1(self) -> str:
        """Gets the comercial_phone_number1 of this ContactInformation.

        Telefone comercial no formato +DDI DDD NNNNNNNNN  # noqa: E501

        :return: The comercial_phone_number1 of this ContactInformation.
        :rtype: str
        """
        return self._comercial_phone_number1

    @comercial_phone_number1.setter
    def comercial_phone_number1(self, comercial_phone_number1: str):
        """Sets the comercial_phone_number1 of this ContactInformation.

        Telefone comercial no formato +DDI DDD NNNNNNNNN  # noqa: E501

        :param comercial_phone_number1: The comercial_phone_number1 of this ContactInformation.
        :type comercial_phone_number1: str
        """

        self._comercial_phone_number1 = comercial_phone_number1

    @property
    def email(self) -> str:
        """Gets the email of this ContactInformation.

        Endereço de e-mail de contato.  # noqa: E501

        :return: The email of this ContactInformation.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this ContactInformation.

        Endereço de e-mail de contato.  # noqa: E501

        :param email: The email of this ContactInformation.
        :type email: str
        """

        self._email = email
