# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PublicKey(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, public_key: str=None, key_id: str=None, expires_in: int=None):  # noqa: E501
        """PublicKey - a model defined in Swagger

        :param public_key: The public_key of this PublicKey.  # noqa: E501
        :type public_key: str
        :param key_id: The key_id of this PublicKey.  # noqa: E501
        :type key_id: str
        :param expires_in: The expires_in of this PublicKey.  # noqa: E501
        :type expires_in: int
        """
        self.swagger_types = {
            'public_key': str,
            'key_id': str,
            'expires_in': int
        }

        self.attribute_map = {
            'public_key': 'publicKey',
            'key_id': 'keyId',
            'expires_in': 'expiresIn'
        }
        self._public_key = public_key
        self._key_id = key_id
        self._expires_in = expires_in

    @classmethod
    def from_dict(cls, dikt) -> 'PublicKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PublicKey of this PublicKey.  # noqa: E501
        :rtype: PublicKey
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public_key(self) -> str:
        """Gets the public_key of this PublicKey.


        :return: The public_key of this PublicKey.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key: str):
        """Sets the public_key of this PublicKey.


        :param public_key: The public_key of this PublicKey.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def key_id(self) -> str:
        """Gets the key_id of this PublicKey.


        :return: The key_id of this PublicKey.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id: str):
        """Sets the key_id of this PublicKey.


        :param key_id: The key_id of this PublicKey.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def expires_in(self) -> int:
        """Gets the expires_in of this PublicKey.


        :return: The expires_in of this PublicKey.
        :rtype: int
        """
        return self._expires_in

    @expires_in.setter
    def expires_in(self, expires_in: int):
        """Sets the expires_in of this PublicKey.


        :param expires_in: The expires_in of this PublicKey.
        :type expires_in: int
        """

        self._expires_in = expires_in
