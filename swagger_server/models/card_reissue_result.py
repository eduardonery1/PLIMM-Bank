# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class CardReissueResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, result_data: AllOfCardReissueResultResultData=None, new_card_id: str=None):  # noqa: E501
        """CardReissueResult - a model defined in Swagger

        :param result_data: The result_data of this CardReissueResult.  # noqa: E501
        :type result_data: AllOfCardReissueResultResultData
        :param new_card_id: The new_card_id of this CardReissueResult.  # noqa: E501
        :type new_card_id: str
        """
        self.swagger_types = {
            'result_data': AllOfCardReissueResultResultData,
            'new_card_id': str
        }

        self.attribute_map = {
            'result_data': 'resultData',
            'new_card_id': 'newCardId'
        }
        self._result_data = result_data
        self._new_card_id = new_card_id

    @classmethod
    def from_dict(cls, dikt) -> 'CardReissueResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CardReissueResult of this CardReissueResult.  # noqa: E501
        :rtype: CardReissueResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result_data(self) -> AllOfCardReissueResultResultData:
        """Gets the result_data of this CardReissueResult.


        :return: The result_data of this CardReissueResult.
        :rtype: AllOfCardReissueResultResultData
        """
        return self._result_data

    @result_data.setter
    def result_data(self, result_data: AllOfCardReissueResultResultData):
        """Sets the result_data of this CardReissueResult.


        :param result_data: The result_data of this CardReissueResult.
        :type result_data: AllOfCardReissueResultResultData
        """
        if result_data is None:
            raise ValueError("Invalid value for `result_data`, must not be `None`")  # noqa: E501

        self._result_data = result_data

    @property
    def new_card_id(self) -> str:
        """Gets the new_card_id of this CardReissueResult.

        Identificador único do novo cartão. Pode ser usado para verificar o status da requisição e para consultar dados do cartão uma vez que ele tenha sido emitido.  # noqa: E501

        :return: The new_card_id of this CardReissueResult.
        :rtype: str
        """
        return self._new_card_id

    @new_card_id.setter
    def new_card_id(self, new_card_id: str):
        """Sets the new_card_id of this CardReissueResult.

        Identificador único do novo cartão. Pode ser usado para verificar o status da requisição e para consultar dados do cartão uma vez que ele tenha sido emitido.  # noqa: E501

        :param new_card_id: The new_card_id of this CardReissueResult.
        :type new_card_id: str
        """
        if new_card_id is None:
            raise ValueError("Invalid value for `new_card_id`, must not be `None`")  # noqa: E501

        self._new_card_id = new_card_id
