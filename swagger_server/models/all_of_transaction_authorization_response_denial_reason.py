# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.transaction_denial_reason import TransactionDenialReason  # noqa: F401,E501
from swagger_server import util


class AllOfTransactionAuthorizationResponseDenialReason(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, denial_code: str=None, denial_description: str=None):  # noqa: E501
        """AllOfTransactionAuthorizationResponseDenialReason - a model defined in Swagger

        :param denial_code: The denial_code of this AllOfTransactionAuthorizationResponseDenialReason.  # noqa: E501
        :type denial_code: str
        :param denial_description: The denial_description of this AllOfTransactionAuthorizationResponseDenialReason.  # noqa: E501
        :type denial_description: str
        """
        self.swagger_types = {
            'denial_code': str,
            'denial_description': str
        }

        self.attribute_map = {
            'denial_code': 'denialCode',
            'denial_description': 'denialDescription'
        }
        self._denial_code = denial_code
        self._denial_description = denial_description

    @classmethod
    def from_dict(cls, dikt) -> 'AllOfTransactionAuthorizationResponseDenialReason':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AllOfTransactionAuthorizationResponseDenialReason of this AllOfTransactionAuthorizationResponseDenialReason.  # noqa: E501
        :rtype: AllOfTransactionAuthorizationResponseDenialReason
        """
        return util.deserialize_model(dikt, cls)

    @property
    def denial_code(self) -> str:
        """Gets the denial_code of this AllOfTransactionAuthorizationResponseDenialReason.

        Código de negação retornado pelo autorizador.  # noqa: E501

        :return: The denial_code of this AllOfTransactionAuthorizationResponseDenialReason.
        :rtype: str
        """
        return self._denial_code

    @denial_code.setter
    def denial_code(self, denial_code: str):
        """Sets the denial_code of this AllOfTransactionAuthorizationResponseDenialReason.

        Código de negação retornado pelo autorizador.  # noqa: E501

        :param denial_code: The denial_code of this AllOfTransactionAuthorizationResponseDenialReason.
        :type denial_code: str
        """

        self._denial_code = denial_code

    @property
    def denial_description(self) -> str:
        """Gets the denial_description of this AllOfTransactionAuthorizationResponseDenialReason.

        Descrição textual do motivo da negação.  # noqa: E501

        :return: The denial_description of this AllOfTransactionAuthorizationResponseDenialReason.
        :rtype: str
        """
        return self._denial_description

    @denial_description.setter
    def denial_description(self, denial_description: str):
        """Sets the denial_description of this AllOfTransactionAuthorizationResponseDenialReason.

        Descrição textual do motivo da negação.  # noqa: E501

        :param denial_description: The denial_description of this AllOfTransactionAuthorizationResponseDenialReason.
        :type denial_description: str
        """

        self._denial_description = denial_description
