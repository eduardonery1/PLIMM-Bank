# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.dispute_document import DisputeDocument  # noqa: F401,E501
from swagger_server.models.source_audit import SourceAudit  # noqa: F401,E501
from swagger_server import util


class DisputeDocumentRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, issuer_dispute_document_id: str=None, document: DisputeDocument=None, source_audit: SourceAudit=None):  # noqa: E501
        """DisputeDocumentRequest - a model defined in Swagger

        :param issuer_dispute_document_id: The issuer_dispute_document_id of this DisputeDocumentRequest.  # noqa: E501
        :type issuer_dispute_document_id: str
        :param document: The document of this DisputeDocumentRequest.  # noqa: E501
        :type document: DisputeDocument
        :param source_audit: The source_audit of this DisputeDocumentRequest.  # noqa: E501
        :type source_audit: SourceAudit
        """
        self.swagger_types = {
            'issuer_dispute_document_id': str,
            'document': DisputeDocument,
            'source_audit': SourceAudit
        }

        self.attribute_map = {
            'issuer_dispute_document_id': 'issuerDisputeDocumentId',
            'document': 'document',
            'source_audit': 'sourceAudit'
        }
        self._issuer_dispute_document_id = issuer_dispute_document_id
        self._document = document
        self._source_audit = source_audit

    @classmethod
    def from_dict(cls, dikt) -> 'DisputeDocumentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DisputeDocumentRequest of this DisputeDocumentRequest.  # noqa: E501
        :rtype: DisputeDocumentRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issuer_dispute_document_id(self) -> str:
        """Gets the issuer_dispute_document_id of this DisputeDocumentRequest.

        Identificador único do pedido de desistência da disputa. Gerado pelo emissor.  # noqa: E501

        :return: The issuer_dispute_document_id of this DisputeDocumentRequest.
        :rtype: str
        """
        return self._issuer_dispute_document_id

    @issuer_dispute_document_id.setter
    def issuer_dispute_document_id(self, issuer_dispute_document_id: str):
        """Sets the issuer_dispute_document_id of this DisputeDocumentRequest.

        Identificador único do pedido de desistência da disputa. Gerado pelo emissor.  # noqa: E501

        :param issuer_dispute_document_id: The issuer_dispute_document_id of this DisputeDocumentRequest.
        :type issuer_dispute_document_id: str
        """

        self._issuer_dispute_document_id = issuer_dispute_document_id

    @property
    def document(self) -> DisputeDocument:
        """Gets the document of this DisputeDocumentRequest.


        :return: The document of this DisputeDocumentRequest.
        :rtype: DisputeDocument
        """
        return self._document

    @document.setter
    def document(self, document: DisputeDocument):
        """Sets the document of this DisputeDocumentRequest.


        :param document: The document of this DisputeDocumentRequest.
        :type document: DisputeDocument
        """
        if document is None:
            raise ValueError("Invalid value for `document`, must not be `None`")  # noqa: E501

        self._document = document

    @property
    def source_audit(self) -> SourceAudit:
        """Gets the source_audit of this DisputeDocumentRequest.


        :return: The source_audit of this DisputeDocumentRequest.
        :rtype: SourceAudit
        """
        return self._source_audit

    @source_audit.setter
    def source_audit(self, source_audit: SourceAudit):
        """Sets the source_audit of this DisputeDocumentRequest.


        :param source_audit: The source_audit of this DisputeDocumentRequest.
        :type source_audit: SourceAudit
        """

        self._source_audit = source_audit
