# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.pin import Pin  # noqa: F401,E501
from swagger_server.models.source_audit import SourceAudit  # noqa: F401,E501
from swagger_server import util


class PinChangeRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, issuer_pin_change_id: str=None, new_pin: Pin=None, source_audit: SourceAudit=None):  # noqa: E501
        """PinChangeRequest - a model defined in Swagger

        :param issuer_pin_change_id: The issuer_pin_change_id of this PinChangeRequest.  # noqa: E501
        :type issuer_pin_change_id: str
        :param new_pin: The new_pin of this PinChangeRequest.  # noqa: E501
        :type new_pin: Pin
        :param source_audit: The source_audit of this PinChangeRequest.  # noqa: E501
        :type source_audit: SourceAudit
        """
        self.swagger_types = {
            'issuer_pin_change_id': str,
            'new_pin': Pin,
            'source_audit': SourceAudit
        }

        self.attribute_map = {
            'issuer_pin_change_id': 'issuerPINChangeId',
            'new_pin': 'newPin',
            'source_audit': 'sourceAudit'
        }
        self._issuer_pin_change_id = issuer_pin_change_id
        self._new_pin = new_pin
        self._source_audit = source_audit

    @classmethod
    def from_dict(cls, dikt) -> 'PinChangeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PinChangeRequest of this PinChangeRequest.  # noqa: E501
        :rtype: PinChangeRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issuer_pin_change_id(self) -> str:
        """Gets the issuer_pin_change_id of this PinChangeRequest.

        Identificador único da requisição de mudança de senha. Gerado pelo emissor.  # noqa: E501

        :return: The issuer_pin_change_id of this PinChangeRequest.
        :rtype: str
        """
        return self._issuer_pin_change_id

    @issuer_pin_change_id.setter
    def issuer_pin_change_id(self, issuer_pin_change_id: str):
        """Sets the issuer_pin_change_id of this PinChangeRequest.

        Identificador único da requisição de mudança de senha. Gerado pelo emissor.  # noqa: E501

        :param issuer_pin_change_id: The issuer_pin_change_id of this PinChangeRequest.
        :type issuer_pin_change_id: str
        """

        self._issuer_pin_change_id = issuer_pin_change_id

    @property
    def new_pin(self) -> Pin:
        """Gets the new_pin of this PinChangeRequest.


        :return: The new_pin of this PinChangeRequest.
        :rtype: Pin
        """
        return self._new_pin

    @new_pin.setter
    def new_pin(self, new_pin: Pin):
        """Sets the new_pin of this PinChangeRequest.


        :param new_pin: The new_pin of this PinChangeRequest.
        :type new_pin: Pin
        """
        if new_pin is None:
            raise ValueError("Invalid value for `new_pin`, must not be `None`")  # noqa: E501

        self._new_pin = new_pin

    @property
    def source_audit(self) -> SourceAudit:
        """Gets the source_audit of this PinChangeRequest.


        :return: The source_audit of this PinChangeRequest.
        :rtype: SourceAudit
        """
        return self._source_audit

    @source_audit.setter
    def source_audit(self, source_audit: SourceAudit):
        """Sets the source_audit of this PinChangeRequest.


        :param source_audit: The source_audit of this PinChangeRequest.
        :type source_audit: SourceAudit
        """

        self._source_audit = source_audit
