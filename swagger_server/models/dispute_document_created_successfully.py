# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.dispute import Dispute  # noqa: F401,E501
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server import util


class DisputeDocumentCreatedSuccessfully(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, result_data: AllOfDisputeDocumentCreatedSuccessfullyResultData=None, dispute: Dispute=None):  # noqa: E501
        """DisputeDocumentCreatedSuccessfully - a model defined in Swagger

        :param result_data: The result_data of this DisputeDocumentCreatedSuccessfully.  # noqa: E501
        :type result_data: AllOfDisputeDocumentCreatedSuccessfullyResultData
        :param dispute: The dispute of this DisputeDocumentCreatedSuccessfully.  # noqa: E501
        :type dispute: Dispute
        """
        self.swagger_types = {
            'result_data': AllOfDisputeDocumentCreatedSuccessfullyResultData,
            'dispute': Dispute
        }

        self.attribute_map = {
            'result_data': 'resultData',
            'dispute': 'dispute'
        }
        self._result_data = result_data
        self._dispute = dispute

    @classmethod
    def from_dict(cls, dikt) -> 'DisputeDocumentCreatedSuccessfully':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DisputeDocumentCreatedSuccessfully of this DisputeDocumentCreatedSuccessfully.  # noqa: E501
        :rtype: DisputeDocumentCreatedSuccessfully
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result_data(self) -> AllOfDisputeDocumentCreatedSuccessfullyResultData:
        """Gets the result_data of this DisputeDocumentCreatedSuccessfully.


        :return: The result_data of this DisputeDocumentCreatedSuccessfully.
        :rtype: AllOfDisputeDocumentCreatedSuccessfullyResultData
        """
        return self._result_data

    @result_data.setter
    def result_data(self, result_data: AllOfDisputeDocumentCreatedSuccessfullyResultData):
        """Sets the result_data of this DisputeDocumentCreatedSuccessfully.


        :param result_data: The result_data of this DisputeDocumentCreatedSuccessfully.
        :type result_data: AllOfDisputeDocumentCreatedSuccessfullyResultData
        """

        self._result_data = result_data

    @property
    def dispute(self) -> Dispute:
        """Gets the dispute of this DisputeDocumentCreatedSuccessfully.


        :return: The dispute of this DisputeDocumentCreatedSuccessfully.
        :rtype: Dispute
        """
        return self._dispute

    @dispute.setter
    def dispute(self, dispute: Dispute):
        """Sets the dispute of this DisputeDocumentCreatedSuccessfully.


        :param dispute: The dispute of this DisputeDocumentCreatedSuccessfully.
        :type dispute: Dispute
        """

        self._dispute = dispute
